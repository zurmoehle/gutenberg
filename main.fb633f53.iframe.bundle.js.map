{"version":3,"file":"main.fb633f53.iframe.bundle.js","mappings":";;;;;;;;AAqBA;;;;;;;;ACAA;;;;;ACMA","sources":["webpack://gutenberg/./packages/components/src/spinner/styles/spinner-styles.js","webpack://gutenberg/@wordpress/components/src/spinner/styles/spinner-styles.js","webpack://gutenberg/./packages/components/src/ui/control-label/styles.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport styled from '@emotion/styled';\nimport { keyframes } from '@emotion/react';\n\n/**\n * Internal dependencies\n */\nimport { COLORS, CONFIG } from '../../utils';\n\nconst spinAnimation = keyframes`\n\tfrom {\n\t\ttransform: rotate(0deg);\n\t}\n\n\tto {\n\t\ttransform: rotate(360deg);\n\t}\n`;\n\nconst topLeft = `calc( ( ${ CONFIG.spinnerSize } - ${ CONFIG.spinnerSize } * ( 2 / 3 ) ) / 2 )`;\n\nexport const StyledSpinner = styled.span`\n\tdisplay: inline-block;\n\tbackground-color: ${ COLORS.gray[ 600 ] };\n\twidth: ${ CONFIG.spinnerSize };\n\theight: ${ CONFIG.spinnerSize };\n\topacity: 0.7;\n\tmargin: 5px 11px 0;\n\tborder-radius: 100%;\n\tposition: relative;\n\n\t&::before {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\tbackground-color: ${ COLORS.white };\n\t\ttop: ${ topLeft };\n\t\tleft: ${ topLeft };\n\t\twidth: calc( ${ CONFIG.spinnerSize } / 4.5 );\n\t\theight: calc( ${ CONFIG.spinnerSize } / 4.5 );\n\t\tborder-radius: 100%;\n\t\ttransform-origin: calc( ${ CONFIG.spinnerSize } / 3 )\n\t\t\tcalc( ${ CONFIG.spinnerSize } / 3 );\n\t\tanimation: ${ spinAnimation } 1s infinite linear;\n\t}\n`;\n","/**\n * External dependencies\n */\nimport styled from '@emotion/styled';\nimport { keyframes } from '@emotion/react';\n\n/**\n * Internal dependencies\n */\nimport { COLORS, CONFIG } from '../../utils';\n\nconst spinAnimation = keyframes`\n\tfrom {\n\t\ttransform: rotate(0deg);\n\t}\n\n\tto {\n\t\ttransform: rotate(360deg);\n\t}\n`;\n\nconst topLeft = `calc( ( ${ CONFIG.spinnerSize } - ${ CONFIG.spinnerSize } * ( 2 / 3 ) ) / 2 )`;\n\nexport const StyledSpinner = styled.span`\n\tdisplay: inline-block;\n\tbackground-color: ${ COLORS.gray[ 600 ] };\n\twidth: ${ CONFIG.spinnerSize };\n\theight: ${ CONFIG.spinnerSize };\n\topacity: 0.7;\n\tmargin: 5px 11px 0;\n\tborder-radius: 100%;\n\tposition: relative;\n\n\t&::before {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\tbackground-color: ${ COLORS.white };\n\t\ttop: ${ topLeft };\n\t\tleft: ${ topLeft };\n\t\twidth: calc( ${ CONFIG.spinnerSize } / 4.5 );\n\t\theight: calc( ${ CONFIG.spinnerSize } / 4.5 );\n\t\tborder-radius: 100%;\n\t\ttransform-origin: calc( ${ CONFIG.spinnerSize } / 3 )\n\t\t\tcalc( ${ CONFIG.spinnerSize } / 3 );\n\t\tanimation: ${ spinAnimation } 1s infinite linear;\n\t}\n`;\n","/**\n * External dependencies\n */\nimport { css } from '@emotion/react';\n\n/**\n * Internal dependencies\n */\nimport CONFIG from '../../utils/config-values';\nimport { getHighDpi } from '../utils/get-high-dpi';\n\nconst lineHeight = `calc(${ CONFIG.fontSize } * 1.2)`;\n\n/**\n * @param {keyof CONFIG} size The padding size.\n */\nfunction getPadding( size ) {\n\treturn `calc((${ CONFIG[ size ] } - ${ lineHeight }) / 2)`;\n}\n\nconst highDpiAdjust = getHighDpi`\n\t> * {\n\t\tposition: relative;\n\t\ttop: 0.5px;\n\t}\n`;\n\nexport const ControlLabel = css`\n\tdisplay: inline-block;\n\tline-height: ${ lineHeight };\n\tmargin: 0;\n\tmax-width: 100%;\n\tpadding-bottom: ${ getPadding( 'controlHeight' ) };\n\tpadding-top: ${ getPadding( 'controlHeight' ) };\n\n\t&:active {\n\t\tuser-select: none;\n\t}\n\n\t${ highDpiAdjust };\n`;\n\nexport const large = css`\n\tpadding-bottom: ${ getPadding( 'controlHeightLarge' ) };\n\tpadding-top: ${ getPadding( 'controlHeightLarge' ) };\n`;\n\nexport const medium = css`\n\tpadding-bottom: ${ getPadding( 'controlHeight' ) };\n\tpadding-top: ${ getPadding( 'controlHeight' ) };\n`;\n\nexport const small = css`\n\tpadding-bottom: ${ getPadding( 'controlHeightSmall' ) };\n\tpadding-top: ${ getPadding( 'controlHeightSmall' ) };\n`;\n\nexport const inline = css`\n\tdisplay: inline-block;\n\tvertical-align: middle;\n`;\n\nexport const block = css`\n\tdisplay: block;\n`;\n"],"names":[],"sourceRoot":""}